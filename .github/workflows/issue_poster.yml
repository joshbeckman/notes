# a workflow that listens to new comments on issues
# only run when the comment is by @joshbeckman and starts with "/post"
#
# to run:
# - read the issue body into a file
# - run the script "/utilities/issue_post"
name: Issue Poster
on:
  issue_comment:
    types: [created]
permissions:
  contents: write
  issues: write
  pages: write
  id-token: write
  actions: read
# Allow one concurrent deployment
concurrency:
  group: "posting"
  cancel-in-progress: true
jobs:
  build:
    if: ${{ !github.event.issue.pull_request && github.event.comment.user.login == 'joshbeckman' && startsWith(github.event.comment.body, '/post')}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup ImageMagick
        run: |
          sudo apt-get update
          sudo apt-get install imagemagick
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sacad
      - name: Read issue body
        id: read_issue
        run: echo "$GITHUB_ISSUE_BODY" > $GITHUB_WORKSPACE/issue_body
        env:
          GITHUB_ISSUE_BODY: ${{ github.event.issue.body }}
      - name: Run issue_post
        run: bundle exec utilities/issue_post
        env:
          OMDB_TOKEN: ${{ secrets.OMDB_TOKEN }}
      - name: Run optimize_images
        run: bundle exec utilities/optimize_images
      - name: Commit changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "josh@joshbeckman.org"
          git add .
          git commit -m "new(usr): Post from issue #${{ github.event.issue.number }}"
      - name: Push changes
        run: git push origin
      - name: Close issue
        run: gh issue close ${{ github.event.issue.number }}
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        working-directory: ${{ github.workspace }}
        env:
          JEKYLL_ENV: production
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install Node dependencies
        run: npm install
      - name: Build Lunr search index
        run: ./utilities/build_lunr_index
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
