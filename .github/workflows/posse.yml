# Workflow for publishing posts to other platforms
name: Publish once syndicate socially everywhere (POSSE)

on:
  # Runs every day at 5:30 UTC, etc.
  schedule:
    - cron: '30 5,11,17,23 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  actions: read

# Allow one concurrent deployment
concurrency:
  group: "posse"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup ImageMagick
        run: sudo apt-get install imagemagick
      - name: Publish to Mastodon
        id: posse_mastodon
        run: bundle exec utilities/posse_mastodon
        env:
          MASTODON_SOCIAL_TOKEN: ${{ secrets.MASTODON_SOCIAL_TOKEN }}
      - name: Determine if changes were made
        id: any_changes_posse_mastodon
        run: echo "changed=$(git status --porcelain blog notes replies assets | wc -l)" >> $GITHUB_OUTPUT
      - name: Commit changes
        if: steps.any_changes_posse_mastodon.outputs.changed != 0
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "josh@joshbeckman.org"
          git add blog
          git add notes
          git add replies
          git add assets
          git commit -m "new(usr): POSSE Mastodon"
      - name: Push changes
        if: steps.any_changes_posse_mastodon.outputs.changed != 0
        run: git push
      - name: Publish to Bluesky
        id: posse_bluesky
        run: bundle exec utilities/posse_bluesky
        env:
          BLUESKY_PASSWORD: ${{ secrets.BLUESKY_PASSWORD }}
      - name: Determine if changes were made
        id: any_changes_posse_bluesky
        run: echo "changed=$(git status --porcelain blog notes replies assets | wc -l)" >> $GITHUB_OUTPUT
      - name: Commit changes
        if: steps.any_changes_posse_bluesky.outputs.changed != 0
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "josh@joshbeckman.org"
          git add blog
          git add notes
          git add replies
          git add assets
          git commit -m "new(usr): POSSE Bluesky"
      - name: Push changes
        if: steps.any_changes_posse_bluesky.outputs.changed != 0
        run: git push
      - name: Import Highlights
        id: import_highlights
        run: bundle exec utilities/import_action
        env:
          READWISE_TOKEN: ${{ secrets.READWISE_TOKEN }}
      - name: Determine if changes were made
        id: any_changes_readwise
        run: echo "changed=$(git status --porcelain notes assets | wc -l)" >> $GITHUB_OUTPUT
      - name: Commit changes
        if: steps.any_changes_readwise.outputs.changed != 0
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "josh@joshbeckman.org"
          git add notes
          git add assets
          git commit -m "new(usr): Import Readwise highlights"
      - name: Push changes
        if: steps.any_changes_readwise.outputs.changed != 0
        run: git push
      - name: Import Mastodon
        id: import_mastodon
        run: bundle exec utilities/pesos_mastodon
      - name: Determine if changes were made
        id: any_changes_pesos_mastodon
        run: echo "changed=$(git status --porcelain replies blog assets | wc -l)" >> $GITHUB_OUTPUT
      - name: Commit changes
        if: steps.any_changes_pesos_mastodon.outputs.changed != 0
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "josh@joshbeckman.org"
          git add replies
          git add blog
          git add assets
          git commit -m "new(usr): PESOS Mastodon"
      - name: Push changes
        if: steps.any_changes_pesos_mastodon.outputs.changed != 0
        run: git push
      - name: Import Letterboxd
        id: import_letterboxd
        run: bundle exec utilities/pesos_letterboxd
      - name: Determine if changes were made
        id: any_changes_pesos_letterboxd
        run: echo "changed=$(git status --porcelain replies blog assets | wc -l)" >> $GITHUB_OUTPUT
      - name: Commit changes
        if: steps.any_changes_pesos_letterboxd.outputs.changed != 0
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "josh@joshbeckman.org"
          git add replies
          git add blog
          git add assets
          git commit -m "new(usr): PESOS Letterboxd"
      - name: Push changes
        if: steps.any_changes_pesos_letterboxd.outputs.changed != 0
        run: git push
      - name: Import Bluesky
        id: import_bluesky
        run: bundle exec utilities/pesos_bluesky
        env:
          BLUESKY_PASSWORD: ${{ secrets.BLUESKY_PASSWORD }}
      - name: Determine if changes were made
        id: any_changes_pesos_bluesky
        run: echo "changed=$(git status --porcelain replies blog assets | wc -l)" >> $GITHUB_OUTPUT
      - name: Commit changes
        if: steps.any_changes_pesos_bluesky.outputs.changed != 0
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "josh@joshbeckman.org"
          git add replies
          git add blog
          git add assets
          git commit -m "new(usr): PESOS Bluesky"
      - name: Push changes
        if: steps.any_changes_pesos_bluesky.outputs.changed != 0
        run: git push
      - name: Optimize images
        id: optimize_images
        run: bundle exec utilities/optimize_images
      - name: Determine if changes were made
        id: any_changes_optimize_images
        run: echo "changed=$(git status --porcelain replies blog assets | wc -l)" >> $GITHUB_OUTPUT
      - name: Commit changes
        if: steps.any_changes_optimize_images.outputs.changed != 0
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "josh@joshbeckman.org"
          git add replies
          git add blog
          git add assets
          git commit -m "chg(dev): Optimize images"
      - name: Push changes
        if: steps.any_changes_optimize_images.outputs.changed != 0
        run: git push
  deploy:
    needs: build
    uses: joshbeckman/notes/.github/workflows/jekyll.yml@master
