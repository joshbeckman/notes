#!/usr/bin/env ruby

require 'json'
require 'net/http'
require 'time'
require 'uri'

Post = Struct.new(
  :body,
  :category,
  :cover_image_url,
  :date,
  :imdb_id,
  :rating,
  :slug,
  :title
)

class Poster
  def run(export_path)
    journal = JSON.parse(File.read(export_path + '/Journal.json'))
    entries = journal["entries"]
    filenames = entries.map do |entry|
      import_entry(entry, export_path)
    end
    exec('nvim -p ' + filenames.join(' '))
  end

  def import_entry(entry, export_path)
    post = Post.new
    post.title = entry.dig("text").match(/# (.*)/)[1]
    puts "Title: #{post.title}"
    post.slug = post.title.gsub(/[^a-zA-Z0-9\s]/, '').gsub(/\s+/, '-').downcase
    post.date = Time.parse(entry.dig("creationDate"))
    copy_images(entry, export_path)
    post.body = parse_body(entry)
    if entry.dig("photos")&.first
      post.cover_image_url = '/' + asset_path_for_photo(entry.dig("photos").first)
    end

    puts "Category: ?"
    post.category = $stdin.gets.chomp

    case post.category
    when "movies", "books"
      puts "Rating: ?"
      post.rating = $stdin.gets.chomp.to_i
      puts "IMDB ID: ?"
      post.imdb_id = $stdin.gets.chomp
      post.cover_image_url = movie_cover_image(post.imdb_id)
    end
    create_file(post)
  end

  def asset_path_for_photo(photo)
    "assets/images/#{photo.dig("identifier")}.#{photo.dig("type")}"
  end

  def copy_images(entry, export_path)
    (entry.dig("photos") || []).each do |photo|
      # copy each photo to the assets/images folder
      # and rename it to its identifier
      `cp #{export_path}/photos/#{photo.dig("md5")}.#{photo.dig("type")} #{asset_path_for_photo(photo)}`
    end
  end

  def parse_body(entry)
    body = entry.dig("text").gsub(/^# (.*)/, '').strip
    (entry.dig("photos") || []).each do |photo|
      body.gsub!(/dayone-moment:\/\/#{photo.dig("identifier")}/, '/' + asset_path_for_photo(photo))
    end
    body
  end

  def create_file(post)
    filename = "#{post.category}/_posts/#{post.date.strftime("%Y-%m-%d")}-#{post.slug}.md"

    File.open(filename, 'w') do |file|
      file.puts "---"
      file.puts "layout: Post"
      file.puts "title: #{post.title}"
      file.puts "toc: true"
      file.puts "cover_image_url: #{post.cover_image_url}"
      file.puts "custom_excerpt: "
      if post.rating
        file.puts "rating: #{post.rating}"
      end
      if post.imdb_id
        file.puts "imdb_id: #{post.imdb_id}"
      end
      file.puts "tags: "
      file.puts "---"
      file.puts ""
      file.puts post.body
    end
    filename
  end

  def movie_cover_image(imdb_id)
    key = File.read(File.expand_path(".omdb_token")).strip
    url = "https://www.omdbapi.com/?i=#{imdb_id}&apikey=#{key}"
    uri = URI(url)
    response = Net::HTTP.get(uri)
    json = JSON.parse(response)
    json["Poster"]
  end
end

# run the script with the first argument passed to it
Poster.new.run(ARGF.argv[0])
